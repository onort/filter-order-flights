/* stylelint-disable declaration-colon-newline-after */
@import "../../styles/main.scss";

$priceCellPaddingHorizontal: map-get($spacers, small);
$priceCellPaddingVertical: map-get($spacers, normal);

.container {
  display: grid;

  @include forSmallScreen {
    background-color: $body-bg;
  }
}

.row {
  display: grid;
  padding: map-get($spacers, small) map-get($spacers, normal);
  border-bottom: 1px solid $muted-border;
  background-color: $white;
  grid-template-columns: repeat(4, 1fr) 2fr;

  @include forSmallScreen {
    margin-bottom: map-get($spacers, x-large);
    box-shadow: 0 1px 5px rgba(0, 0, 0, 0.233752);
    grid-template-columns: 1fr 1fr;
  }

  &.header {
    display: grid;
    padding: 0 map-get($spacers, small);
    border-bottom: 1px solid $muted-border;
    color: $grey2;
    font-family: $font-family-primary;
    font-size: map-get($heading-sizes, h5);
    font-weight: 600;
    grid-template-columns: repeat(6, 1fr);

    @include forSmallScreen {
      display: none;
    }
  }

  &.active {
    border-bottom: none;
    background-color: $element-bg;

    @include forSmallScreen {
      margin-bottom: 0;
    }
  }
}

.cell {
  padding: map-get($spacers, large) map-get($spacers, normal);

  &.priceCell {
    padding:
      calc(#{map-get($spacers, large)} - #{$priceCellPaddingHorizontal})
      calc(#{map-get($spacers, normal)} - #{$priceCellPaddingHorizontal});

    @include forSmallScreen {
      margin:
        0 calc(-1 * #{map-get($spacers, normal)})
        calc(-1 * #{map-get($spacers, small)});
      background-color: $element-bg;
      grid-column: 1 / 3;
    }
  }
}

.dataCell,
.carrierCell {
  display: flex;
  flex-direction: column;
  justify-content: center;

  span {
    display: block;
  }
}

.carrierName {
  color: $grey2;
  font-family: $font-family-primary;
  font-size: map-get($heading-sizes, h5);
  font-weight: 400;
  line-height: map-get($font-sizes, large);
}

.logo {
  max-width: 100%;
  height: auto;

  @include forSmallScreen {
    width: px-to-rem(120px);
    max-width: 100%;
  }
}

.val {
  color: $black;
  font-family: $font-family-primary;
  font-size: map-get($font-sizes, large);
  font-weight: 600;
}

.sub {
  color: $grey2;
  font-family: $font-family-primary;
  font-size: map-get($heading-sizes, h5);
  line-height: map-get($font-sizes, large);
}

.detailCell {
  justify-content: flex-start;

  .val {
    font-size: map-get($font-sizes, small);
  }
}

.origin {
  position: relative;
}

.plane {
  position: absolute;
  z-index: 2;
  top: 32px;
  right: 11px;
}

.price {
  display: flex;
  justify-content: space-between;
  padding: $priceCellPaddingVertical $priceCellPaddingHorizontal;
  background-color: $element-bg;
  border-radius: px-to-rem(2px);

  @include forSmallScreen {
    padding-right: map-get($spacers, x-large);
    padding-left: map-get($spacers, x-large);
  }
}

.viewButton {
  background-color: $dark-blue;
}

.noResult {
  padding: map-get($spacers, x-large) map-get($spacers, large);
  color: $grey3;
  font-family: $font-family-primary;
  font-size: map-get($heading-sizes, h3);
  font-weight: 400;
}

.stopsCell {
  @include forSmallScreen {
    grid-column: 2 / 3;
    grid-row-start: 1;
  }
}
