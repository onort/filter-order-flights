// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<DataCell /> should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DataCell
    detailCell={false}
    sub="Sub"
    val="Val"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <span
          className="val"
        >
          Val
        </span>,
        <span
          className="sub"
        >
          Sub
        </span>,
        undefined,
      ],
      "className": "dataCell",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Val",
          "className": "val",
        },
        "ref": null,
        "rendered": "Val",
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Sub",
          "className": "sub",
        },
        "ref": null,
        "rendered": "Sub",
        "type": "span",
      },
      undefined,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <span
            className="val"
          >
            Val
          </span>,
          <span
            className="sub"
          >
            Sub
          </span>,
          undefined,
        ],
        "className": "dataCell",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Val",
            "className": "val",
          },
          "ref": null,
          "rendered": "Val",
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Sub",
            "className": "sub",
          },
          "ref": null,
          "rendered": "Sub",
          "type": "span",
        },
        undefined,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`<DataCell /> should match snapshot 2`] = `"<div class=\\"cell dataCell\\"><span class=\\"val\\">Val</span><span class=\\"sub\\">Sub</span></div>"`;
